{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Komputasi Numerik Nama : Moh. Iqbal Zuhdi Husaeni NIM : 180411100051","title":"Home"},{"location":"#komputasi-numerik","text":"Nama : Moh. Iqbal Zuhdi Husaeni NIM : 180411100051","title":"Komputasi Numerik"},{"location":"Tugas-1/","text":"Error in numerical computation Komputasi Numerik Komputasi numerik bisa dikatakan sebagai penentuan error suatu perhitungan untuk mencapai nilai akurasi. Komputer Numerik bertujuan untuk menentukan suatu akurasi dari hasil perhitungan atau percobaan. Komputer Numerik ini banyak sekali diimplementasikan dalam kehidupan termasuk dunia kedokteran, teknik, ekonomi, dan sains. Error Error merupakan perbedaan antara hasil penyelesaian suatu model matematik secara numeric dengan penyelesaian secara analitis. Kesalahan yang terjadi sangatlah penting, karena kesalahan dalam pemakaian algoritma pendekatan akan menyebabkan nilai kesalahan yang besar. Sehingga pendekatan metode numerik selalu membahas tingkat kesalahan dan tingkat kecepatan proses yang akan terjadi. Error disini dibagi menjadi 2 : 1. Absolute Error Kesalahan absolut suatu kuantitas adalah nilai absolut dari selisih antara nilai sebenarnya X dan nilai perkiraan x. Ini dilambangkan dengan $$ Ea = |X - x| $$ 2. Relative Error Relative error biasa disebut sebagai kesalahan relatif dari suatu kuantitas adalah rasio kesalahan absolutnya terhadap nilai sebenarnya. Ini dilambangkan dengan Er. $$ Er = |Xt - Xa / Xt| $$ Deret Maclaurin Suatu fungsi f(x) yang memiliki turunan , , , dan seterusnya yang kontinyu dalam interval dengan maka untuk disekitar yaitu , dapat diekspansi kedalam Deret Taylor. Deret Taylor didefinisikan seperti berikut. $$ f(x) = f(a) + {f^1(a) (x-a) \\over 1!} + {f^2(a) (x-a)^2 \\over 2!} + {f^3(a) (x-a)^3 \\over 3!} ... {f^n(a) (x-a)^n \\over n!} $$ Deret MacLaurin hampir sama dengan dengan Deret Taylor, hanya saja dalam deret maclaurin nilai a=0, sehingga persamaannya adalah seperti berikut. $$ f(x) = f(0) + {f^1(0)x \\over 1!} + {f^2(0)x^2 \\over 2!} + {f^3(0)x^3 \\over 3!} ... {f^n(0)x^n \\over n!} $$ Deret MacLaurin biasa disebut sebagai deret Taylor baku, kerena deret maclaurin merupakan standar atau dasar yang berlaku dengan a=0. Atau persamaan Deret MacLaurin diatas dapat ditulis seperti berikut. $$ f(x) = \\sum \\limits_{i=0}^{n} {f^i(0)x^i \\over i!} $$ Implementasi Program membuat program supaya dapaat mengekspansi bilangan e^3x dengan nilai x=1 hingga nilai menjadi kurang dari 0,001 bisa dengan Implementasi Program sebagai berikut. #f(x)=e**3x import math x = 1 i = 1 f = 1 while i>0: e = ((3**i)*x**i)/math.factorial(i) f1 = f+e print(\"iterasi ke-\"+str(i)) print(\"Hasil suku lama =\",f) print(\"Hasil suku baru =\",f1) h = abs(f-f1) #ini selisih print(\"selisih =\",h,\"\\n\") if h<=0.001: break else: f+=e i+=1 print(\"jumlah iterasi =\",i) Output : iterasi ke-1 Hasil suku lama = 1 Hasil suku baru = 4.0 selisih = 3.0 iterasi ke-2 Hasil suku lama = 4.0 Hasil suku baru = 8.5 selisih = 4.5 iterasi ke-3 Hasil suku lama = 8.5 Hasil suku baru = 13.0 selisih = 4.5 iterasi ke-4 Hasil suku lama = 13.0 Hasil suku baru = 16.375 selisih = 3.375 iterasi ke-5 Hasil suku lama = 16.375 Hasil suku baru = 18.4 selisih = 2.0249999999999986 iterasi ke-6 Hasil suku lama = 18.4 Hasil suku baru = 19.412499999999998 selisih = 1.0124999999999993 iterasi ke-7 Hasil suku lama = 19.412499999999998 Hasil suku baru = 19.846428571428568 selisih = 0.4339285714285701 iterasi ke-8 Hasil suku lama = 19.846428571428568 Hasil suku baru = 20.009151785714284 selisih = 0.162723214285716 iterasi ke-9 Hasil suku lama = 20.009151785714284 Hasil suku baru = 20.063392857142855 selisih = 0.05424107142857082 iterasi ke-10 Hasil suku lama = 20.063392857142855 Hasil suku baru = 20.079665178571425 selisih = 0.016272321428569825 iterasi ke-11 Hasil suku lama = 20.079665178571425 Hasil suku baru = 20.08410308441558 selisih = 0.004437905844156376 iterasi ke-12 Hasil suku lama = 20.08410308441558 Hasil suku baru = 20.08521256087662 selisih = 0.001109476461039094 iterasi ke-13 Hasil suku lama = 20.08521256087662 Hasil suku baru = 20.08546859390609 selisih = 0.0002560330294691937 jumlah iterasi = 13 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"Tugas 1"},{"location":"Tugas-1/#error-in-numerical-computation","text":"","title":"Error in numerical computation"},{"location":"Tugas-1/#komputasi-numerik","text":"Komputasi numerik bisa dikatakan sebagai penentuan error suatu perhitungan untuk mencapai nilai akurasi. Komputer Numerik bertujuan untuk menentukan suatu akurasi dari hasil perhitungan atau percobaan. Komputer Numerik ini banyak sekali diimplementasikan dalam kehidupan termasuk dunia kedokteran, teknik, ekonomi, dan sains.","title":"Komputasi Numerik"},{"location":"Tugas-1/#error","text":"Error merupakan perbedaan antara hasil penyelesaian suatu model matematik secara numeric dengan penyelesaian secara analitis. Kesalahan yang terjadi sangatlah penting, karena kesalahan dalam pemakaian algoritma pendekatan akan menyebabkan nilai kesalahan yang besar. Sehingga pendekatan metode numerik selalu membahas tingkat kesalahan dan tingkat kecepatan proses yang akan terjadi. Error disini dibagi menjadi 2 :","title":"Error"},{"location":"Tugas-1/#1-absolute-error","text":"Kesalahan absolut suatu kuantitas adalah nilai absolut dari selisih antara nilai sebenarnya X dan nilai perkiraan x. Ini dilambangkan dengan $$ Ea = |X - x| $$","title":"1. Absolute Error"},{"location":"Tugas-1/#2-relative-error","text":"Relative error biasa disebut sebagai kesalahan relatif dari suatu kuantitas adalah rasio kesalahan absolutnya terhadap nilai sebenarnya. Ini dilambangkan dengan Er. $$ Er = |Xt - Xa / Xt| $$","title":"2. Relative Error"},{"location":"Tugas-1/#deret-maclaurin","text":"Suatu fungsi f(x) yang memiliki turunan , , , dan seterusnya yang kontinyu dalam interval dengan maka untuk disekitar yaitu , dapat diekspansi kedalam Deret Taylor. Deret Taylor didefinisikan seperti berikut. $$ f(x) = f(a) + {f^1(a) (x-a) \\over 1!} + {f^2(a) (x-a)^2 \\over 2!} + {f^3(a) (x-a)^3 \\over 3!} ... {f^n(a) (x-a)^n \\over n!} $$ Deret MacLaurin hampir sama dengan dengan Deret Taylor, hanya saja dalam deret maclaurin nilai a=0, sehingga persamaannya adalah seperti berikut. $$ f(x) = f(0) + {f^1(0)x \\over 1!} + {f^2(0)x^2 \\over 2!} + {f^3(0)x^3 \\over 3!} ... {f^n(0)x^n \\over n!} $$ Deret MacLaurin biasa disebut sebagai deret Taylor baku, kerena deret maclaurin merupakan standar atau dasar yang berlaku dengan a=0. Atau persamaan Deret MacLaurin diatas dapat ditulis seperti berikut. $$ f(x) = \\sum \\limits_{i=0}^{n} {f^i(0)x^i \\over i!} $$","title":"Deret Maclaurin"},{"location":"Tugas-1/#implementasi-program","text":"membuat program supaya dapaat mengekspansi bilangan e^3x dengan nilai x=1 hingga nilai menjadi kurang dari 0,001 bisa dengan Implementasi Program sebagai berikut. #f(x)=e**3x import math x = 1 i = 1 f = 1 while i>0: e = ((3**i)*x**i)/math.factorial(i) f1 = f+e print(\"iterasi ke-\"+str(i)) print(\"Hasil suku lama =\",f) print(\"Hasil suku baru =\",f1) h = abs(f-f1) #ini selisih print(\"selisih =\",h,\"\\n\") if h<=0.001: break else: f+=e i+=1 print(\"jumlah iterasi =\",i) Output : iterasi ke-1 Hasil suku lama = 1 Hasil suku baru = 4.0 selisih = 3.0 iterasi ke-2 Hasil suku lama = 4.0 Hasil suku baru = 8.5 selisih = 4.5 iterasi ke-3 Hasil suku lama = 8.5 Hasil suku baru = 13.0 selisih = 4.5 iterasi ke-4 Hasil suku lama = 13.0 Hasil suku baru = 16.375 selisih = 3.375 iterasi ke-5 Hasil suku lama = 16.375 Hasil suku baru = 18.4 selisih = 2.0249999999999986 iterasi ke-6 Hasil suku lama = 18.4 Hasil suku baru = 19.412499999999998 selisih = 1.0124999999999993 iterasi ke-7 Hasil suku lama = 19.412499999999998 Hasil suku baru = 19.846428571428568 selisih = 0.4339285714285701 iterasi ke-8 Hasil suku lama = 19.846428571428568 Hasil suku baru = 20.009151785714284 selisih = 0.162723214285716 iterasi ke-9 Hasil suku lama = 20.009151785714284 Hasil suku baru = 20.063392857142855 selisih = 0.05424107142857082 iterasi ke-10 Hasil suku lama = 20.063392857142855 Hasil suku baru = 20.079665178571425 selisih = 0.016272321428569825 iterasi ke-11 Hasil suku lama = 20.079665178571425 Hasil suku baru = 20.08410308441558 selisih = 0.004437905844156376 iterasi ke-12 Hasil suku lama = 20.08410308441558 Hasil suku baru = 20.08521256087662 selisih = 0.001109476461039094 iterasi ke-13 Hasil suku lama = 20.08521256087662 Hasil suku baru = 20.08546859390609 selisih = 0.0002560330294691937 jumlah iterasi = 13 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$']]} });","title":"Implementasi Program"}]}